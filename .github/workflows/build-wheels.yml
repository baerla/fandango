name: Build wheels

on:
  push:
    branches:
      - dev   # Run tests on pushes to the dev branch
  pull_request:
    branches:
      - main  # Run tests on pull requests targeting the main branch
      - dev   # Run tests on pull requests targeting the dev branch
  workflow_dispatch: # Enables manual execution from the Actions tab

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest # Windows Server 2022
          - windows-2025
          - macos-latest # macOS 14: https://github.com/actions/runner-images
          - macos-15

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          # Only build CPython 3.x targets
          CIBW_BUILD: "cp3*"
          # Ensure full C++17 availability on macOS builds
          MACOSX_DEPLOYMENT_TARGET: "10.13"
          # Signal setup.py to fail if binary build fails
          SPAM_EXAMPLE_REQUIRE_CI_BINARY_BUILD: ~

      - name: Store wheels
        uses: actions/upload-artifact@v4
        with:
          name: temp-wheels-${{ github.run_id }}-${{ matrix.os }}
          path: ./wheelhouse/
          retention-days: 1  # We only need these temporarily

  upload_wheels:
    name: Upload all wheels
    needs: build_wheels  # This ensures this job only runs after all builds succeed
    runs-on: ubuntu-latest
    if: success()  # Extra check to ensure all previous jobs succeeded
    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: temp-wheels-${{ github.run_id }}-*
          merge-multiple: true
          path: ./all-wheels

      - name: Upload final wheels
        uses: actions/upload-artifact@v4
        with:
          name: all-wheels-${{ github.run_id }}
          path: ./all-wheels/
