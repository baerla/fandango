/*
 * This file was auto-generated by speedy-antlr-tool v1.4.3
 *  https://github.com/amykyta3/speedy-antlr-tool
 */

#define PY_SSIZE_T_CLEAN
#include <Python.h>

#include <cstring>
#include <any>

#include "antlr4-runtime.h"
#include "FandangoLexer.h"
#include "FandangoParser.h"
#include "speedy_antlr.h"

#include "sa_fandango_translator.h"
antlr4::tree::ParseTree* get_parse_tree_fandango(FandangoParser *parser) {return parser->fandango();}
antlr4::tree::ParseTree* get_parse_tree_program(FandangoParser *parser) {return parser->program();}
antlr4::tree::ParseTree* get_parse_tree_statement(FandangoParser *parser) {return parser->statement();}
antlr4::tree::ParseTree* get_parse_tree_production(FandangoParser *parser) {return parser->production();}
antlr4::tree::ParseTree* get_parse_tree_alternative(FandangoParser *parser) {return parser->alternative();}
antlr4::tree::ParseTree* get_parse_tree_concatenation(FandangoParser *parser) {return parser->concatenation();}
antlr4::tree::ParseTree* get_parse_tree_operator(FandangoParser *parser) {return parser->operator();}
antlr4::tree::ParseTree* get_parse_tree_kleene(FandangoParser *parser) {return parser->kleene();}
antlr4::tree::ParseTree* get_parse_tree_plus(FandangoParser *parser) {return parser->plus();}
antlr4::tree::ParseTree* get_parse_tree_option(FandangoParser *parser) {return parser->option();}
antlr4::tree::ParseTree* get_parse_tree_repeat(FandangoParser *parser) {return parser->repeat();}
antlr4::tree::ParseTree* get_parse_tree_symbol(FandangoParser *parser) {return parser->symbol();}
antlr4::tree::ParseTree* get_parse_tree_generator_call(FandangoParser *parser) {return parser->generator_call();}
antlr4::tree::ParseTree* get_parse_tree_char_set(FandangoParser *parser) {return parser->char_set();}
antlr4::tree::ParseTree* get_parse_tree_constraint(FandangoParser *parser) {return parser->constraint();}
antlr4::tree::ParseTree* get_parse_tree_implies(FandangoParser *parser) {return parser->implies();}
antlr4::tree::ParseTree* get_parse_tree_quantifier(FandangoParser *parser) {return parser->quantifier();}
antlr4::tree::ParseTree* get_parse_tree_formula_disjunction(FandangoParser *parser) {return parser->formula_disjunction();}
antlr4::tree::ParseTree* get_parse_tree_formula_conjunction(FandangoParser *parser) {return parser->formula_conjunction();}
antlr4::tree::ParseTree* get_parse_tree_formula_atom(FandangoParser *parser) {return parser->formula_atom();}
antlr4::tree::ParseTree* get_parse_tree_formula_comparison(FandangoParser *parser) {return parser->formula_comparison();}
antlr4::tree::ParseTree* get_parse_tree_expr(FandangoParser *parser) {return parser->expr();}
antlr4::tree::ParseTree* get_parse_tree_selector_length(FandangoParser *parser) {return parser->selector_length();}
antlr4::tree::ParseTree* get_parse_tree_selector(FandangoParser *parser) {return parser->selector();}
antlr4::tree::ParseTree* get_parse_tree_selection(FandangoParser *parser) {return parser->selection();}
antlr4::tree::ParseTree* get_parse_tree_base_selection(FandangoParser *parser) {return parser->base_selection();}
antlr4::tree::ParseTree* get_parse_tree_rs_pairs(FandangoParser *parser) {return parser->rs_pairs();}
antlr4::tree::ParseTree* get_parse_tree_rs_pair(FandangoParser *parser) {return parser->rs_pair();}
antlr4::tree::ParseTree* get_parse_tree_rs_slices(FandangoParser *parser) {return parser->rs_slices();}
antlr4::tree::ParseTree* get_parse_tree_rs_slice(FandangoParser *parser) {return parser->rs_slice();}
antlr4::tree::ParseTree* get_parse_tree_python(FandangoParser *parser) {return parser->python();}
antlr4::tree::ParseTree* get_parse_tree_python_tag(FandangoParser *parser) {return parser->python_tag();}
antlr4::tree::ParseTree* get_parse_tree_python_file(FandangoParser *parser) {return parser->python_file();}
antlr4::tree::ParseTree* get_parse_tree_interactive(FandangoParser *parser) {return parser->interactive();}
antlr4::tree::ParseTree* get_parse_tree_eval(FandangoParser *parser) {return parser->eval();}
antlr4::tree::ParseTree* get_parse_tree_func_type(FandangoParser *parser) {return parser->func_type();}
antlr4::tree::ParseTree* get_parse_tree_statements(FandangoParser *parser) {return parser->statements();}
antlr4::tree::ParseTree* get_parse_tree_stmt(FandangoParser *parser) {return parser->stmt();}
antlr4::tree::ParseTree* get_parse_tree_statement_newline(FandangoParser *parser) {return parser->statement_newline();}
antlr4::tree::ParseTree* get_parse_tree_simple_stmts(FandangoParser *parser) {return parser->simple_stmts();}
antlr4::tree::ParseTree* get_parse_tree_simple_stmt(FandangoParser *parser) {return parser->simple_stmt();}
antlr4::tree::ParseTree* get_parse_tree_compound_stmt(FandangoParser *parser) {return parser->compound_stmt();}
antlr4::tree::ParseTree* get_parse_tree_assignment(FandangoParser *parser) {return parser->assignment();}
antlr4::tree::ParseTree* get_parse_tree_annotated_rhs(FandangoParser *parser) {return parser->annotated_rhs();}
antlr4::tree::ParseTree* get_parse_tree_augassign(FandangoParser *parser) {return parser->augassign();}
antlr4::tree::ParseTree* get_parse_tree_return_stmt(FandangoParser *parser) {return parser->return_stmt();}
antlr4::tree::ParseTree* get_parse_tree_raise_stmt(FandangoParser *parser) {return parser->raise_stmt();}
antlr4::tree::ParseTree* get_parse_tree_global_stmt(FandangoParser *parser) {return parser->global_stmt();}
antlr4::tree::ParseTree* get_parse_tree_nonlocal_stmt(FandangoParser *parser) {return parser->nonlocal_stmt();}
antlr4::tree::ParseTree* get_parse_tree_del_stmt(FandangoParser *parser) {return parser->del_stmt();}
antlr4::tree::ParseTree* get_parse_tree_yield_stmt(FandangoParser *parser) {return parser->yield_stmt();}
antlr4::tree::ParseTree* get_parse_tree_assert_stmt(FandangoParser *parser) {return parser->assert_stmt();}
antlr4::tree::ParseTree* get_parse_tree_import_stmt(FandangoParser *parser) {return parser->import_stmt();}
antlr4::tree::ParseTree* get_parse_tree_import_name(FandangoParser *parser) {return parser->import_name();}
antlr4::tree::ParseTree* get_parse_tree_import_from(FandangoParser *parser) {return parser->import_from();}
antlr4::tree::ParseTree* get_parse_tree_import_from_targets(FandangoParser *parser) {return parser->import_from_targets();}
antlr4::tree::ParseTree* get_parse_tree_import_from_as_names(FandangoParser *parser) {return parser->import_from_as_names();}
antlr4::tree::ParseTree* get_parse_tree_import_from_as_name(FandangoParser *parser) {return parser->import_from_as_name();}
antlr4::tree::ParseTree* get_parse_tree_dotted_as_names(FandangoParser *parser) {return parser->dotted_as_names();}
antlr4::tree::ParseTree* get_parse_tree_dotted_as_name(FandangoParser *parser) {return parser->dotted_as_name();}
antlr4::tree::ParseTree* get_parse_tree_dotted_name(FandangoParser *parser) {return parser->dotted_name();}
antlr4::tree::ParseTree* get_parse_tree_block(FandangoParser *parser) {return parser->block();}
antlr4::tree::ParseTree* get_parse_tree_decorators(FandangoParser *parser) {return parser->decorators();}
antlr4::tree::ParseTree* get_parse_tree_class_def(FandangoParser *parser) {return parser->class_def();}
antlr4::tree::ParseTree* get_parse_tree_class_def_raw(FandangoParser *parser) {return parser->class_def_raw();}
antlr4::tree::ParseTree* get_parse_tree_function_def(FandangoParser *parser) {return parser->function_def();}
antlr4::tree::ParseTree* get_parse_tree_function_def_raw(FandangoParser *parser) {return parser->function_def_raw();}
antlr4::tree::ParseTree* get_parse_tree_params(FandangoParser *parser) {return parser->params();}
antlr4::tree::ParseTree* get_parse_tree_parameters(FandangoParser *parser) {return parser->parameters();}
antlr4::tree::ParseTree* get_parse_tree_slash_no_default(FandangoParser *parser) {return parser->slash_no_default();}
antlr4::tree::ParseTree* get_parse_tree_slash_with_default(FandangoParser *parser) {return parser->slash_with_default();}
antlr4::tree::ParseTree* get_parse_tree_star_etc(FandangoParser *parser) {return parser->star_etc();}
antlr4::tree::ParseTree* get_parse_tree_kwds(FandangoParser *parser) {return parser->kwds();}
antlr4::tree::ParseTree* get_parse_tree_param_no_default(FandangoParser *parser) {return parser->param_no_default();}
antlr4::tree::ParseTree* get_parse_tree_param_no_default_star_annotation(FandangoParser *parser) {return parser->param_no_default_star_annotation();}
antlr4::tree::ParseTree* get_parse_tree_param_with_default(FandangoParser *parser) {return parser->param_with_default();}
antlr4::tree::ParseTree* get_parse_tree_param_maybe_default(FandangoParser *parser) {return parser->param_maybe_default();}
antlr4::tree::ParseTree* get_parse_tree_param(FandangoParser *parser) {return parser->param();}
antlr4::tree::ParseTree* get_parse_tree_param_star_annotation(FandangoParser *parser) {return parser->param_star_annotation();}
antlr4::tree::ParseTree* get_parse_tree_annotation(FandangoParser *parser) {return parser->annotation();}
antlr4::tree::ParseTree* get_parse_tree_star_annotation(FandangoParser *parser) {return parser->star_annotation();}
antlr4::tree::ParseTree* get_parse_tree_default(FandangoParser *parser) {return parser->default();}
antlr4::tree::ParseTree* get_parse_tree_if_stmt(FandangoParser *parser) {return parser->if_stmt();}
antlr4::tree::ParseTree* get_parse_tree_elif_stmt(FandangoParser *parser) {return parser->elif_stmt();}
antlr4::tree::ParseTree* get_parse_tree_else_block(FandangoParser *parser) {return parser->else_block();}
antlr4::tree::ParseTree* get_parse_tree_while_stmt(FandangoParser *parser) {return parser->while_stmt();}
antlr4::tree::ParseTree* get_parse_tree_for_stmt(FandangoParser *parser) {return parser->for_stmt();}
antlr4::tree::ParseTree* get_parse_tree_with_stmt(FandangoParser *parser) {return parser->with_stmt();}
antlr4::tree::ParseTree* get_parse_tree_with_item(FandangoParser *parser) {return parser->with_item();}
antlr4::tree::ParseTree* get_parse_tree_try_stmt(FandangoParser *parser) {return parser->try_stmt();}
antlr4::tree::ParseTree* get_parse_tree_except_block(FandangoParser *parser) {return parser->except_block();}
antlr4::tree::ParseTree* get_parse_tree_except_star_block(FandangoParser *parser) {return parser->except_star_block();}
antlr4::tree::ParseTree* get_parse_tree_finally_block(FandangoParser *parser) {return parser->finally_block();}
antlr4::tree::ParseTree* get_parse_tree_match_stmt(FandangoParser *parser) {return parser->match_stmt();}
antlr4::tree::ParseTree* get_parse_tree_subject_expr(FandangoParser *parser) {return parser->subject_expr();}
antlr4::tree::ParseTree* get_parse_tree_case_block(FandangoParser *parser) {return parser->case_block();}
antlr4::tree::ParseTree* get_parse_tree_guard(FandangoParser *parser) {return parser->guard();}
antlr4::tree::ParseTree* get_parse_tree_patterns(FandangoParser *parser) {return parser->patterns();}
antlr4::tree::ParseTree* get_parse_tree_pattern(FandangoParser *parser) {return parser->pattern();}
antlr4::tree::ParseTree* get_parse_tree_as_pattern(FandangoParser *parser) {return parser->as_pattern();}
antlr4::tree::ParseTree* get_parse_tree_or_pattern(FandangoParser *parser) {return parser->or_pattern();}
antlr4::tree::ParseTree* get_parse_tree_closed_pattern(FandangoParser *parser) {return parser->closed_pattern();}
antlr4::tree::ParseTree* get_parse_tree_literal_pattern(FandangoParser *parser) {return parser->literal_pattern();}
antlr4::tree::ParseTree* get_parse_tree_literal_expr(FandangoParser *parser) {return parser->literal_expr();}
antlr4::tree::ParseTree* get_parse_tree_complex_number(FandangoParser *parser) {return parser->complex_number();}
antlr4::tree::ParseTree* get_parse_tree_signed_number(FandangoParser *parser) {return parser->signed_number();}
antlr4::tree::ParseTree* get_parse_tree_signed_real_number(FandangoParser *parser) {return parser->signed_real_number();}
antlr4::tree::ParseTree* get_parse_tree_real_number(FandangoParser *parser) {return parser->real_number();}
antlr4::tree::ParseTree* get_parse_tree_imaginary_number(FandangoParser *parser) {return parser->imaginary_number();}
antlr4::tree::ParseTree* get_parse_tree_capture_pattern(FandangoParser *parser) {return parser->capture_pattern();}
antlr4::tree::ParseTree* get_parse_tree_pattern_capture_target(FandangoParser *parser) {return parser->pattern_capture_target();}
antlr4::tree::ParseTree* get_parse_tree_wildcard_pattern(FandangoParser *parser) {return parser->wildcard_pattern();}
antlr4::tree::ParseTree* get_parse_tree_value_pattern(FandangoParser *parser) {return parser->value_pattern();}
antlr4::tree::ParseTree* get_parse_tree_attr(FandangoParser *parser) {return parser->attr();}
antlr4::tree::ParseTree* get_parse_tree_name_or_attr(FandangoParser *parser) {return parser->name_or_attr();}
antlr4::tree::ParseTree* get_parse_tree_group_pattern(FandangoParser *parser) {return parser->group_pattern();}
antlr4::tree::ParseTree* get_parse_tree_sequence_pattern(FandangoParser *parser) {return parser->sequence_pattern();}
antlr4::tree::ParseTree* get_parse_tree_open_sequence_pattern(FandangoParser *parser) {return parser->open_sequence_pattern();}
antlr4::tree::ParseTree* get_parse_tree_maybe_sequence_pattern(FandangoParser *parser) {return parser->maybe_sequence_pattern();}
antlr4::tree::ParseTree* get_parse_tree_maybe_star_pattern(FandangoParser *parser) {return parser->maybe_star_pattern();}
antlr4::tree::ParseTree* get_parse_tree_star_pattern(FandangoParser *parser) {return parser->star_pattern();}
antlr4::tree::ParseTree* get_parse_tree_mapping_pattern(FandangoParser *parser) {return parser->mapping_pattern();}
antlr4::tree::ParseTree* get_parse_tree_items_pattern(FandangoParser *parser) {return parser->items_pattern();}
antlr4::tree::ParseTree* get_parse_tree_key_value_pattern(FandangoParser *parser) {return parser->key_value_pattern();}
antlr4::tree::ParseTree* get_parse_tree_double_star_pattern(FandangoParser *parser) {return parser->double_star_pattern();}
antlr4::tree::ParseTree* get_parse_tree_class_pattern(FandangoParser *parser) {return parser->class_pattern();}
antlr4::tree::ParseTree* get_parse_tree_positional_patterns(FandangoParser *parser) {return parser->positional_patterns();}
antlr4::tree::ParseTree* get_parse_tree_keyword_patterns(FandangoParser *parser) {return parser->keyword_patterns();}
antlr4::tree::ParseTree* get_parse_tree_keyword_pattern(FandangoParser *parser) {return parser->keyword_pattern();}
antlr4::tree::ParseTree* get_parse_tree_type_alias(FandangoParser *parser) {return parser->type_alias();}
antlr4::tree::ParseTree* get_parse_tree_type_params(FandangoParser *parser) {return parser->type_params();}
antlr4::tree::ParseTree* get_parse_tree_type_param_seq(FandangoParser *parser) {return parser->type_param_seq();}
antlr4::tree::ParseTree* get_parse_tree_type_param(FandangoParser *parser) {return parser->type_param();}
antlr4::tree::ParseTree* get_parse_tree_type_param_bound(FandangoParser *parser) {return parser->type_param_bound();}
antlr4::tree::ParseTree* get_parse_tree_expressions(FandangoParser *parser) {return parser->expressions();}
antlr4::tree::ParseTree* get_parse_tree_expression(FandangoParser *parser) {return parser->expression();}
antlr4::tree::ParseTree* get_parse_tree_yield_expr(FandangoParser *parser) {return parser->yield_expr();}
antlr4::tree::ParseTree* get_parse_tree_star_expressions(FandangoParser *parser) {return parser->star_expressions();}
antlr4::tree::ParseTree* get_parse_tree_star_expression(FandangoParser *parser) {return parser->star_expression();}
antlr4::tree::ParseTree* get_parse_tree_star_named_expressions(FandangoParser *parser) {return parser->star_named_expressions();}
antlr4::tree::ParseTree* get_parse_tree_star_named_expression(FandangoParser *parser) {return parser->star_named_expression();}
antlr4::tree::ParseTree* get_parse_tree_assignment_expression(FandangoParser *parser) {return parser->assignment_expression();}
antlr4::tree::ParseTree* get_parse_tree_named_expression(FandangoParser *parser) {return parser->named_expression();}
antlr4::tree::ParseTree* get_parse_tree_disjunction(FandangoParser *parser) {return parser->disjunction();}
antlr4::tree::ParseTree* get_parse_tree_conjunction(FandangoParser *parser) {return parser->conjunction();}
antlr4::tree::ParseTree* get_parse_tree_inversion(FandangoParser *parser) {return parser->inversion();}
antlr4::tree::ParseTree* get_parse_tree_comparison(FandangoParser *parser) {return parser->comparison();}
antlr4::tree::ParseTree* get_parse_tree_compare_op_bitwise_or_pair(FandangoParser *parser) {return parser->compare_op_bitwise_or_pair();}
antlr4::tree::ParseTree* get_parse_tree_eq_bitwise_or(FandangoParser *parser) {return parser->eq_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_noteq_bitwise_or(FandangoParser *parser) {return parser->noteq_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_lte_bitwise_or(FandangoParser *parser) {return parser->lte_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_lt_bitwise_or(FandangoParser *parser) {return parser->lt_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_gte_bitwise_or(FandangoParser *parser) {return parser->gte_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_gt_bitwise_or(FandangoParser *parser) {return parser->gt_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_notin_bitwise_or(FandangoParser *parser) {return parser->notin_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_in_bitwise_or(FandangoParser *parser) {return parser->in_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_isnot_bitwise_or(FandangoParser *parser) {return parser->isnot_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_is_bitwise_or(FandangoParser *parser) {return parser->is_bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_bitwise_or(FandangoParser *parser) {return parser->bitwise_or();}
antlr4::tree::ParseTree* get_parse_tree_bitwise_xor(FandangoParser *parser) {return parser->bitwise_xor();}
antlr4::tree::ParseTree* get_parse_tree_bitwise_and(FandangoParser *parser) {return parser->bitwise_and();}
antlr4::tree::ParseTree* get_parse_tree_shift_expr(FandangoParser *parser) {return parser->shift_expr();}
antlr4::tree::ParseTree* get_parse_tree_sum(FandangoParser *parser) {return parser->sum();}
antlr4::tree::ParseTree* get_parse_tree_term(FandangoParser *parser) {return parser->term();}
antlr4::tree::ParseTree* get_parse_tree_factor(FandangoParser *parser) {return parser->factor();}
antlr4::tree::ParseTree* get_parse_tree_power(FandangoParser *parser) {return parser->power();}
antlr4::tree::ParseTree* get_parse_tree_await_primary(FandangoParser *parser) {return parser->await_primary();}
antlr4::tree::ParseTree* get_parse_tree_primary(FandangoParser *parser) {return parser->primary();}
antlr4::tree::ParseTree* get_parse_tree_slices(FandangoParser *parser) {return parser->slices();}
antlr4::tree::ParseTree* get_parse_tree_slice(FandangoParser *parser) {return parser->slice();}
antlr4::tree::ParseTree* get_parse_tree_atom(FandangoParser *parser) {return parser->atom();}
antlr4::tree::ParseTree* get_parse_tree_group(FandangoParser *parser) {return parser->group();}
antlr4::tree::ParseTree* get_parse_tree_lambdef(FandangoParser *parser) {return parser->lambdef();}
antlr4::tree::ParseTree* get_parse_tree_lambda_params(FandangoParser *parser) {return parser->lambda_params();}
antlr4::tree::ParseTree* get_parse_tree_lambda_parameters(FandangoParser *parser) {return parser->lambda_parameters();}
antlr4::tree::ParseTree* get_parse_tree_lambda_slash_no_default(FandangoParser *parser) {return parser->lambda_slash_no_default();}
antlr4::tree::ParseTree* get_parse_tree_lambda_slash_with_default(FandangoParser *parser) {return parser->lambda_slash_with_default();}
antlr4::tree::ParseTree* get_parse_tree_lambda_star_etc(FandangoParser *parser) {return parser->lambda_star_etc();}
antlr4::tree::ParseTree* get_parse_tree_lambda_kwds(FandangoParser *parser) {return parser->lambda_kwds();}
antlr4::tree::ParseTree* get_parse_tree_lambda_param_no_default(FandangoParser *parser) {return parser->lambda_param_no_default();}
antlr4::tree::ParseTree* get_parse_tree_lambda_param_with_default(FandangoParser *parser) {return parser->lambda_param_with_default();}
antlr4::tree::ParseTree* get_parse_tree_lambda_param_maybe_default(FandangoParser *parser) {return parser->lambda_param_maybe_default();}
antlr4::tree::ParseTree* get_parse_tree_lambda_param(FandangoParser *parser) {return parser->lambda_param();}
antlr4::tree::ParseTree* get_parse_tree_fstring_middle(FandangoParser *parser) {return parser->fstring_middle();}
antlr4::tree::ParseTree* get_parse_tree_fstring_replacement_field(FandangoParser *parser) {return parser->fstring_replacement_field();}
antlr4::tree::ParseTree* get_parse_tree_fstring_conversion(FandangoParser *parser) {return parser->fstring_conversion();}
antlr4::tree::ParseTree* get_parse_tree_fstring_full_format_spec(FandangoParser *parser) {return parser->fstring_full_format_spec();}
antlr4::tree::ParseTree* get_parse_tree_fstring_format_spec(FandangoParser *parser) {return parser->fstring_format_spec();}
antlr4::tree::ParseTree* get_parse_tree_fstring(FandangoParser *parser) {return parser->fstring();}
antlr4::tree::ParseTree* get_parse_tree_string(FandangoParser *parser) {return parser->string();}
antlr4::tree::ParseTree* get_parse_tree_strings(FandangoParser *parser) {return parser->strings();}
antlr4::tree::ParseTree* get_parse_tree_list(FandangoParser *parser) {return parser->list();}
antlr4::tree::ParseTree* get_parse_tree_tuple(FandangoParser *parser) {return parser->tuple();}
antlr4::tree::ParseTree* get_parse_tree_set(FandangoParser *parser) {return parser->set();}
antlr4::tree::ParseTree* get_parse_tree_dict(FandangoParser *parser) {return parser->dict();}
antlr4::tree::ParseTree* get_parse_tree_double_starred_kvpairs(FandangoParser *parser) {return parser->double_starred_kvpairs();}
antlr4::tree::ParseTree* get_parse_tree_double_starred_kvpair(FandangoParser *parser) {return parser->double_starred_kvpair();}
antlr4::tree::ParseTree* get_parse_tree_kvpair(FandangoParser *parser) {return parser->kvpair();}
antlr4::tree::ParseTree* get_parse_tree_for_if_clauses(FandangoParser *parser) {return parser->for_if_clauses();}
antlr4::tree::ParseTree* get_parse_tree_for_if_clause(FandangoParser *parser) {return parser->for_if_clause();}
antlr4::tree::ParseTree* get_parse_tree_listcomp(FandangoParser *parser) {return parser->listcomp();}
antlr4::tree::ParseTree* get_parse_tree_setcomp(FandangoParser *parser) {return parser->setcomp();}
antlr4::tree::ParseTree* get_parse_tree_genexp(FandangoParser *parser) {return parser->genexp();}
antlr4::tree::ParseTree* get_parse_tree_dictcomp(FandangoParser *parser) {return parser->dictcomp();}
antlr4::tree::ParseTree* get_parse_tree_arguments(FandangoParser *parser) {return parser->arguments();}
antlr4::tree::ParseTree* get_parse_tree_args(FandangoParser *parser) {return parser->args();}
antlr4::tree::ParseTree* get_parse_tree_arg(FandangoParser *parser) {return parser->arg();}
antlr4::tree::ParseTree* get_parse_tree_kwargs(FandangoParser *parser) {return parser->kwargs();}
antlr4::tree::ParseTree* get_parse_tree_starred_expression(FandangoParser *parser) {return parser->starred_expression();}
antlr4::tree::ParseTree* get_parse_tree_kwarg_or_starred(FandangoParser *parser) {return parser->kwarg_or_starred();}
antlr4::tree::ParseTree* get_parse_tree_kwarg_or_double_starred(FandangoParser *parser) {return parser->kwarg_or_double_starred();}
antlr4::tree::ParseTree* get_parse_tree_star_targets(FandangoParser *parser) {return parser->star_targets();}
antlr4::tree::ParseTree* get_parse_tree_star_targets_list_seq(FandangoParser *parser) {return parser->star_targets_list_seq();}
antlr4::tree::ParseTree* get_parse_tree_star_targets_tuple_seq(FandangoParser *parser) {return parser->star_targets_tuple_seq();}
antlr4::tree::ParseTree* get_parse_tree_star_target(FandangoParser *parser) {return parser->star_target();}
antlr4::tree::ParseTree* get_parse_tree_target_with_star_atom(FandangoParser *parser) {return parser->target_with_star_atom();}
antlr4::tree::ParseTree* get_parse_tree_star_atom(FandangoParser *parser) {return parser->star_atom();}
antlr4::tree::ParseTree* get_parse_tree_single_target(FandangoParser *parser) {return parser->single_target();}
antlr4::tree::ParseTree* get_parse_tree_single_subscript_attribute_target(FandangoParser *parser) {return parser->single_subscript_attribute_target();}
antlr4::tree::ParseTree* get_parse_tree_t_primary(FandangoParser *parser) {return parser->t_primary();}
antlr4::tree::ParseTree* get_parse_tree_del_targets(FandangoParser *parser) {return parser->del_targets();}
antlr4::tree::ParseTree* get_parse_tree_del_target(FandangoParser *parser) {return parser->del_target();}
antlr4::tree::ParseTree* get_parse_tree_del_t_atom(FandangoParser *parser) {return parser->del_t_atom();}
antlr4::tree::ParseTree* get_parse_tree_type_expressions(FandangoParser *parser) {return parser->type_expressions();}
antlr4::tree::ParseTree* get_parse_tree_func_type_comment(FandangoParser *parser) {return parser->func_type_comment();}

antlr4::tree::ParseTree* get_parse_tree(FandangoParser *parser, const char *entry_rule_name) {
    static std::map<std::string, antlr4::tree::ParseTree* (*)(FandangoParser*)> table
    {
        {"fandango", &get_parse_tree_fandango},
        {"program", &get_parse_tree_program},
        {"statement", &get_parse_tree_statement},
        {"production", &get_parse_tree_production},
        {"alternative", &get_parse_tree_alternative},
        {"concatenation", &get_parse_tree_concatenation},
        {"operator", &get_parse_tree_operator},
        {"kleene", &get_parse_tree_kleene},
        {"plus", &get_parse_tree_plus},
        {"option", &get_parse_tree_option},
        {"repeat", &get_parse_tree_repeat},
        {"symbol", &get_parse_tree_symbol},
        {"generator_call", &get_parse_tree_generator_call},
        {"char_set", &get_parse_tree_char_set},
        {"constraint", &get_parse_tree_constraint},
        {"implies", &get_parse_tree_implies},
        {"quantifier", &get_parse_tree_quantifier},
        {"formula_disjunction", &get_parse_tree_formula_disjunction},
        {"formula_conjunction", &get_parse_tree_formula_conjunction},
        {"formula_atom", &get_parse_tree_formula_atom},
        {"formula_comparison", &get_parse_tree_formula_comparison},
        {"expr", &get_parse_tree_expr},
        {"selector_length", &get_parse_tree_selector_length},
        {"selector", &get_parse_tree_selector},
        {"selection", &get_parse_tree_selection},
        {"base_selection", &get_parse_tree_base_selection},
        {"rs_pairs", &get_parse_tree_rs_pairs},
        {"rs_pair", &get_parse_tree_rs_pair},
        {"rs_slices", &get_parse_tree_rs_slices},
        {"rs_slice", &get_parse_tree_rs_slice},
        {"python", &get_parse_tree_python},
        {"python_tag", &get_parse_tree_python_tag},
        {"python_file", &get_parse_tree_python_file},
        {"interactive", &get_parse_tree_interactive},
        {"eval", &get_parse_tree_eval},
        {"func_type", &get_parse_tree_func_type},
        {"statements", &get_parse_tree_statements},
        {"stmt", &get_parse_tree_stmt},
        {"statement_newline", &get_parse_tree_statement_newline},
        {"simple_stmts", &get_parse_tree_simple_stmts},
        {"simple_stmt", &get_parse_tree_simple_stmt},
        {"compound_stmt", &get_parse_tree_compound_stmt},
        {"assignment", &get_parse_tree_assignment},
        {"annotated_rhs", &get_parse_tree_annotated_rhs},
        {"augassign", &get_parse_tree_augassign},
        {"return_stmt", &get_parse_tree_return_stmt},
        {"raise_stmt", &get_parse_tree_raise_stmt},
        {"global_stmt", &get_parse_tree_global_stmt},
        {"nonlocal_stmt", &get_parse_tree_nonlocal_stmt},
        {"del_stmt", &get_parse_tree_del_stmt},
        {"yield_stmt", &get_parse_tree_yield_stmt},
        {"assert_stmt", &get_parse_tree_assert_stmt},
        {"import_stmt", &get_parse_tree_import_stmt},
        {"import_name", &get_parse_tree_import_name},
        {"import_from", &get_parse_tree_import_from},
        {"import_from_targets", &get_parse_tree_import_from_targets},
        {"import_from_as_names", &get_parse_tree_import_from_as_names},
        {"import_from_as_name", &get_parse_tree_import_from_as_name},
        {"dotted_as_names", &get_parse_tree_dotted_as_names},
        {"dotted_as_name", &get_parse_tree_dotted_as_name},
        {"dotted_name", &get_parse_tree_dotted_name},
        {"block", &get_parse_tree_block},
        {"decorators", &get_parse_tree_decorators},
        {"class_def", &get_parse_tree_class_def},
        {"class_def_raw", &get_parse_tree_class_def_raw},
        {"function_def", &get_parse_tree_function_def},
        {"function_def_raw", &get_parse_tree_function_def_raw},
        {"params", &get_parse_tree_params},
        {"parameters", &get_parse_tree_parameters},
        {"slash_no_default", &get_parse_tree_slash_no_default},
        {"slash_with_default", &get_parse_tree_slash_with_default},
        {"star_etc", &get_parse_tree_star_etc},
        {"kwds", &get_parse_tree_kwds},
        {"param_no_default", &get_parse_tree_param_no_default},
        {"param_no_default_star_annotation", &get_parse_tree_param_no_default_star_annotation},
        {"param_with_default", &get_parse_tree_param_with_default},
        {"param_maybe_default", &get_parse_tree_param_maybe_default},
        {"param", &get_parse_tree_param},
        {"param_star_annotation", &get_parse_tree_param_star_annotation},
        {"annotation", &get_parse_tree_annotation},
        {"star_annotation", &get_parse_tree_star_annotation},
        {"default", &get_parse_tree_default},
        {"if_stmt", &get_parse_tree_if_stmt},
        {"elif_stmt", &get_parse_tree_elif_stmt},
        {"else_block", &get_parse_tree_else_block},
        {"while_stmt", &get_parse_tree_while_stmt},
        {"for_stmt", &get_parse_tree_for_stmt},
        {"with_stmt", &get_parse_tree_with_stmt},
        {"with_item", &get_parse_tree_with_item},
        {"try_stmt", &get_parse_tree_try_stmt},
        {"except_block", &get_parse_tree_except_block},
        {"except_star_block", &get_parse_tree_except_star_block},
        {"finally_block", &get_parse_tree_finally_block},
        {"match_stmt", &get_parse_tree_match_stmt},
        {"subject_expr", &get_parse_tree_subject_expr},
        {"case_block", &get_parse_tree_case_block},
        {"guard", &get_parse_tree_guard},
        {"patterns", &get_parse_tree_patterns},
        {"pattern", &get_parse_tree_pattern},
        {"as_pattern", &get_parse_tree_as_pattern},
        {"or_pattern", &get_parse_tree_or_pattern},
        {"closed_pattern", &get_parse_tree_closed_pattern},
        {"literal_pattern", &get_parse_tree_literal_pattern},
        {"literal_expr", &get_parse_tree_literal_expr},
        {"complex_number", &get_parse_tree_complex_number},
        {"signed_number", &get_parse_tree_signed_number},
        {"signed_real_number", &get_parse_tree_signed_real_number},
        {"real_number", &get_parse_tree_real_number},
        {"imaginary_number", &get_parse_tree_imaginary_number},
        {"capture_pattern", &get_parse_tree_capture_pattern},
        {"pattern_capture_target", &get_parse_tree_pattern_capture_target},
        {"wildcard_pattern", &get_parse_tree_wildcard_pattern},
        {"value_pattern", &get_parse_tree_value_pattern},
        {"attr", &get_parse_tree_attr},
        {"name_or_attr", &get_parse_tree_name_or_attr},
        {"group_pattern", &get_parse_tree_group_pattern},
        {"sequence_pattern", &get_parse_tree_sequence_pattern},
        {"open_sequence_pattern", &get_parse_tree_open_sequence_pattern},
        {"maybe_sequence_pattern", &get_parse_tree_maybe_sequence_pattern},
        {"maybe_star_pattern", &get_parse_tree_maybe_star_pattern},
        {"star_pattern", &get_parse_tree_star_pattern},
        {"mapping_pattern", &get_parse_tree_mapping_pattern},
        {"items_pattern", &get_parse_tree_items_pattern},
        {"key_value_pattern", &get_parse_tree_key_value_pattern},
        {"double_star_pattern", &get_parse_tree_double_star_pattern},
        {"class_pattern", &get_parse_tree_class_pattern},
        {"positional_patterns", &get_parse_tree_positional_patterns},
        {"keyword_patterns", &get_parse_tree_keyword_patterns},
        {"keyword_pattern", &get_parse_tree_keyword_pattern},
        {"type_alias", &get_parse_tree_type_alias},
        {"type_params", &get_parse_tree_type_params},
        {"type_param_seq", &get_parse_tree_type_param_seq},
        {"type_param", &get_parse_tree_type_param},
        {"type_param_bound", &get_parse_tree_type_param_bound},
        {"expressions", &get_parse_tree_expressions},
        {"expression", &get_parse_tree_expression},
        {"yield_expr", &get_parse_tree_yield_expr},
        {"star_expressions", &get_parse_tree_star_expressions},
        {"star_expression", &get_parse_tree_star_expression},
        {"star_named_expressions", &get_parse_tree_star_named_expressions},
        {"star_named_expression", &get_parse_tree_star_named_expression},
        {"assignment_expression", &get_parse_tree_assignment_expression},
        {"named_expression", &get_parse_tree_named_expression},
        {"disjunction", &get_parse_tree_disjunction},
        {"conjunction", &get_parse_tree_conjunction},
        {"inversion", &get_parse_tree_inversion},
        {"comparison", &get_parse_tree_comparison},
        {"compare_op_bitwise_or_pair", &get_parse_tree_compare_op_bitwise_or_pair},
        {"eq_bitwise_or", &get_parse_tree_eq_bitwise_or},
        {"noteq_bitwise_or", &get_parse_tree_noteq_bitwise_or},
        {"lte_bitwise_or", &get_parse_tree_lte_bitwise_or},
        {"lt_bitwise_or", &get_parse_tree_lt_bitwise_or},
        {"gte_bitwise_or", &get_parse_tree_gte_bitwise_or},
        {"gt_bitwise_or", &get_parse_tree_gt_bitwise_or},
        {"notin_bitwise_or", &get_parse_tree_notin_bitwise_or},
        {"in_bitwise_or", &get_parse_tree_in_bitwise_or},
        {"isnot_bitwise_or", &get_parse_tree_isnot_bitwise_or},
        {"is_bitwise_or", &get_parse_tree_is_bitwise_or},
        {"bitwise_or", &get_parse_tree_bitwise_or},
        {"bitwise_xor", &get_parse_tree_bitwise_xor},
        {"bitwise_and", &get_parse_tree_bitwise_and},
        {"shift_expr", &get_parse_tree_shift_expr},
        {"sum", &get_parse_tree_sum},
        {"term", &get_parse_tree_term},
        {"factor", &get_parse_tree_factor},
        {"power", &get_parse_tree_power},
        {"await_primary", &get_parse_tree_await_primary},
        {"primary", &get_parse_tree_primary},
        {"slices", &get_parse_tree_slices},
        {"slice", &get_parse_tree_slice},
        {"atom", &get_parse_tree_atom},
        {"group", &get_parse_tree_group},
        {"lambdef", &get_parse_tree_lambdef},
        {"lambda_params", &get_parse_tree_lambda_params},
        {"lambda_parameters", &get_parse_tree_lambda_parameters},
        {"lambda_slash_no_default", &get_parse_tree_lambda_slash_no_default},
        {"lambda_slash_with_default", &get_parse_tree_lambda_slash_with_default},
        {"lambda_star_etc", &get_parse_tree_lambda_star_etc},
        {"lambda_kwds", &get_parse_tree_lambda_kwds},
        {"lambda_param_no_default", &get_parse_tree_lambda_param_no_default},
        {"lambda_param_with_default", &get_parse_tree_lambda_param_with_default},
        {"lambda_param_maybe_default", &get_parse_tree_lambda_param_maybe_default},
        {"lambda_param", &get_parse_tree_lambda_param},
        {"fstring_middle", &get_parse_tree_fstring_middle},
        {"fstring_replacement_field", &get_parse_tree_fstring_replacement_field},
        {"fstring_conversion", &get_parse_tree_fstring_conversion},
        {"fstring_full_format_spec", &get_parse_tree_fstring_full_format_spec},
        {"fstring_format_spec", &get_parse_tree_fstring_format_spec},
        {"fstring", &get_parse_tree_fstring},
        {"string", &get_parse_tree_string},
        {"strings", &get_parse_tree_strings},
        {"list", &get_parse_tree_list},
        {"tuple", &get_parse_tree_tuple},
        {"set", &get_parse_tree_set},
        {"dict", &get_parse_tree_dict},
        {"double_starred_kvpairs", &get_parse_tree_double_starred_kvpairs},
        {"double_starred_kvpair", &get_parse_tree_double_starred_kvpair},
        {"kvpair", &get_parse_tree_kvpair},
        {"for_if_clauses", &get_parse_tree_for_if_clauses},
        {"for_if_clause", &get_parse_tree_for_if_clause},
        {"listcomp", &get_parse_tree_listcomp},
        {"setcomp", &get_parse_tree_setcomp},
        {"genexp", &get_parse_tree_genexp},
        {"dictcomp", &get_parse_tree_dictcomp},
        {"arguments", &get_parse_tree_arguments},
        {"args", &get_parse_tree_args},
        {"arg", &get_parse_tree_arg},
        {"kwargs", &get_parse_tree_kwargs},
        {"starred_expression", &get_parse_tree_starred_expression},
        {"kwarg_or_starred", &get_parse_tree_kwarg_or_starred},
        {"kwarg_or_double_starred", &get_parse_tree_kwarg_or_double_starred},
        {"star_targets", &get_parse_tree_star_targets},
        {"star_targets_list_seq", &get_parse_tree_star_targets_list_seq},
        {"star_targets_tuple_seq", &get_parse_tree_star_targets_tuple_seq},
        {"star_target", &get_parse_tree_star_target},
        {"target_with_star_atom", &get_parse_tree_target_with_star_atom},
        {"star_atom", &get_parse_tree_star_atom},
        {"single_target", &get_parse_tree_single_target},
        {"single_subscript_attribute_target", &get_parse_tree_single_subscript_attribute_target},
        {"t_primary", &get_parse_tree_t_primary},
        {"del_targets", &get_parse_tree_del_targets},
        {"del_target", &get_parse_tree_del_target},
        {"del_t_atom", &get_parse_tree_del_t_atom},
        {"type_expressions", &get_parse_tree_type_expressions},
        {"func_type_comment", &get_parse_tree_func_type_comment}
    };

    auto entry = table.find(entry_rule_name);
    if (entry != table.end()) {
        return (*(entry->second))(parser);
    } else {
        PyErr_SetString(PyExc_ValueError, "Invalid entry_rule_name");
        throw speedy_antlr::PythonException();
    }
}

/*
 * Python function prototype:
 *  do_parse(
 *      parser_cls:antlr4.Parser,
 *      stream:antlr4.InputStream,
 *      entry_rule_name:str,
 *      sa_err_listener:SA_ErrorListener
 *  )
 */
PyObject* do_parse(PyObject *self, PyObject *args) {
    PyObject *strdata = NULL;
    PyObject *result = NULL;
    PyObject *token_module = NULL;

    try {
        // Get args
        PyObject *parser_cls = NULL;
        PyObject *stream = NULL;
        const char *entry_rule_name = NULL;
        PyObject *sa_err_listener = NULL;
        if(!PyArg_ParseTuple(args,
            "OOsO:do_parse",
            &parser_cls, &stream, &entry_rule_name, &sa_err_listener
        )) {
            return NULL;
        }

        // Extract input stream's string
        const char *cstrdata;
        Py_ssize_t bufsize;
        strdata = PyObject_GetAttrString(stream, "strdata");
        if(!strdata) throw speedy_antlr::PythonException();
        cstrdata = PyUnicode_AsUTF8AndSize(strdata, &bufsize);
        if(!cstrdata) throw speedy_antlr::PythonException();

        // Create an antlr InputStream object
        antlr4::ANTLRInputStream cpp_stream(cstrdata, bufsize);

        // in case error listener is overridden
        token_module = PyImport_ImportModule("antlr4.Token");
        if(!token_module) throw speedy_antlr::PythonException();
        speedy_antlr::Translator translator(parser_cls, stream);
        speedy_antlr::ErrorTranslatorListener err_listener(&translator, sa_err_listener);

        // Lex
        FandangoLexer lexer(&cpp_stream);
        if(sa_err_listener != Py_None){
            lexer.removeErrorListeners();
            lexer.addErrorListener(&err_listener);
        }
        antlr4::CommonTokenStream token_stream(&lexer);
        token_stream.fill();

        // Parse
        FandangoParser parser(&token_stream);
        if(sa_err_listener != Py_None){
            parser.removeErrorListeners();
            parser.addErrorListener(&err_listener);
        }
        antlr4::tree::ParseTree *parse_tree;
        parse_tree = get_parse_tree(&parser, entry_rule_name);

        // Translate Parse tree to Python
        SA_FandangoTranslator visitor(&translator);
        result = std::any_cast<PyObject *>(visitor.visit(parse_tree));

        // Clean up data
        Py_XDECREF(token_module);
        Py_XDECREF(strdata);

        return result;

    } catch(speedy_antlr::PythonException &e) {
        Py_XDECREF(token_module);
        Py_XDECREF(strdata);
        Py_XDECREF(result);

        // Python exception already has error indicator set
        return NULL;
    } catch(...) {
        Py_XDECREF(token_module);
        Py_XDECREF(strdata);
        Py_XDECREF(result);

        // An internal C++ exception was thrown.
        // Set error indicator to a generic runtime error
        PyErr_SetString(PyExc_RuntimeError, "Internal error");
        return NULL;
    }
}


extern "C" {

    static PyObject* c_do_parse(PyObject *self, PyObject *args) {
        return do_parse(self, args);
    }

    static PyMethodDef methods[] = {
        {
            "do_parse",  c_do_parse, METH_VARARGS,
            "Run parser"
        },
        {NULL, NULL, 0, NULL} /* Sentinel */
    };

    static struct PyModuleDef module = {
        PyModuleDef_HEAD_INIT,
        "sa_fandango_cpp_parser",   /* name of module */
        NULL, /* module documentation, may be NULL */
        -1,       /* size of per-interpreter state of the module,
                    or -1 if the module keeps state in global variables. */
        methods
    };
}


PyMODINIT_FUNC
PyInit_sa_fandango_cpp_parser(void) {
    PyObject *m = PyModule_Create(&module);
    return m;
}